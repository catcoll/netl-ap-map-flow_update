      MODULE STRING_MODULE
C
C     WRITTEN BY: MATTHEW STADELMAN
C     FILE DESCRIPTION: STORES THE VARIABLES USED TO SOLVE THE
C         LINEAR SYSTEM OF EQUATIONS GENERATED BY THE LCL MODEL.
C
C     LAST MODIFIED: 2016/07/12
C ----------------------------------------------------------------------
C               ---- VARIABLE DESCRIPTIONS ----
C   LNPROC PARAMETERS
C     MAXFLD - MAXIMUM NUMBER OF FIELDS A LINE AND HAVE
C     MAXLEN - MAXIMUM LENGTH OF A CHARACTER VARIABLE IN THE PROGRAM
C     LFLD - STORES THE LENGTH OF EACH CHARACTER STRING IN CFLD
C     CFLD - STORES THE STRING IN EACH FIELD
C
C ----------------------------------------------------------------------
C
      PUBLIC
C
C     LNPROC PARAMETERS
      INTEGER :: MAXFLD, MAXLEN
      PARAMETER (MAXFLD = 100,MAXLEN = 256)
      INTEGER,SAVE :: LFLD(MAXFLD)
      CHARACTER(MAXLEN),SAVE :: CFLD(MAXFLD)
C
      CONTAINS
C     ------------------------------------------------------------------
      SUBROUTINE UPPER_CASE(C_IN,C_OUT)
        !
        ! WRITTEN BY: W. NEAL SAMS
        ! DATE WRITTEN: 10/04/2013
        !
        IMPLICIT NONE
        INTEGER :: I,NC
        CHARACTER(*) :: C_IN,C_OUT
        !
        DO I = 1,LEN_TRIM(C_IN)
         NC = ICHAR(C_IN(I:I))
         IF(97 <= NC .AND. NC <=122) NC = NC - 32
         C_OUT(I:I) = CHAR(NC)
        ENDDO
        !
        RETURN
      END SUBROUTINE
C     ------------------------------------------------------------------
      SUBROUTINE LOWER_CASE(C_IN,C_OUT)
        !
        ! WRITTEN BY: W. NEAL SAMS
        ! DATE WRITTEN: 10/04/2013
        !
        IMPLICIT NONE
        INTEGER :: I,NC
        CHARACTER(*) :: C_IN,C_OUT
        !
        DO I = 1,LEN_TRIM(C_IN)
         NC = ICHAR(C_IN(I:I))
         IF(65 <= NC .AND. NC <=90) NC = NC + 32
         C_OUT(I:I) = CHAR(NC)
        ENDDO
        !
        RETURN
      END SUBROUTINE
C     ------------------------------------------------------------------
      SUBROUTINE R_JUST(C_IN,C_OUT,NC)
        !
        ! WRITTEN BY: MATTHEW STADELMAN
        ! DATE WRITTEN: 2015/09/17
        !
        IMPLICIT NONE
        INTEGER :: I,NC,NW
        CHARACTER(NC) :: C_IN,C_OUT,CVAR
       !
        NW = NC - LEN_TRIM(C_IN)
        DO I = 1,NW
          CVAR(I:I) = ' '
        END DO
        C_OUT = CVAR(1:NW)//TRIM(C_IN)
        !
        RETURN
      END SUBROUTINE
C     ------------------------------------------------------------------
      END MODULE