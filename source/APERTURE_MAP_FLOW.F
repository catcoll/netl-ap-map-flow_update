      PROGRAM APERTURE_MAP_FLOW
C
C     WRITTEN BY: MATTHEW STADELMAN
C
C     PROGRAM DESCRIPTON: RUNS THE LOCAL CUBIC LAW MODEL ON A SUPPLIED
C         FRACTURE APERTURE MAP OUTPUTTING THE DATA TO MULTIPLE CSV FILES
C         AND A VTK FILE FOR USE WITH PARAVIEW. THIS PROGRAM WAS DESIGNED
C         UNDER AN ORISE APPOINTMENT AT THE NATIONAL ENERGY TECHNOLOGY LAB
C         IN MORGANTOWN WEST VIRGINIA.
C
C     DATE WRITTEN:  2016/02/12
C     LAST MODIFIED: 2016/07/10
C
C     SUBROUTINE CALLS: INITIALIZE_RUN, FRAC_FLOW, OUTPUT_DATA, CLOSE_IO
C
C ---------------------------------------------------------------------
C     VARIABLE DESCRIPTION:
C       BOK - CONTROL VARIABLE USED TO HALT PROGRAM IF A FATAL ERROR IS ENCOUNTERED
C
C ----------------------------------------------------------------------
C
      USE APM_MODULE
C
      IMPLICIT NONE
      LOGICAL :: BOK = .TRUE.
C
C     CONDITIONAL COMPILATION TO DETERMINE OS
      SYS_OS = "UNIX"
      IF (WIN64 == 1) THEN
        SYS_OS = "WINDOWS"
      ENDIF
C
C     INITIALIZING THE MODEL
      CALL INITIALIZE_RUN(BOK)
      IF (.NOT. BOK) GOTO 1000
C
C     RUNNING SUBROUTINE TO SOLVE FOR FLOW
      CALL BLANK
      CALL MESSAGE(" CALCULATING FLOW THROUGH FRACTURE")
C
C     SOLVING FOR FLOW THROUGH FRACTURE
      CALL FRAC_FLOW(BOK)
      IF (.NOT. BOK) GOTO 1000
      CALL BLANK
      CALL MESSAGE("      FRACTURE FLOWS CALCULATED")
C
C     CALCULATING AND WRITTING OUTPUT DATA
      CALL OUTPUT_DATA
C
C     CLOSING OUTPUT FILES
      CALL CLOSE_IO
C
 1000 WRITE(*,"(1X)")
      WRITE(*,"('     **** EXITING PROGRAM ****')")
      IF (.NOT. BOK) STOP(1)
C
      END PROGRAM
